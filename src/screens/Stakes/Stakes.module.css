.tool-bar {
  display: flex;
  flex-direction: row;
  gap: 2rem;
  align-items: center;
  justify-content: end;
}

.row {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.expand {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
}

.list {
  background-color: #28283c;
  border-radius: 1.6rem;
  overflow: auto;
  min-height: 80vh;
  max-height: 1200px;
  border: #28283c solid 1.5px;
}

.dropdown {
  min-width: 12rem;
}

.option {
  text-align: left;

  height: 3.6rem;
  line-height: 2.5;
  cursor: pointer;
}

.option:hover {
  color: rgb(251, 129, 58);
}

.search > * {
  margin: 0;
  padding: 0;
}

.search > .label {
  margin-bottom: 5px;
}

.dropdown > label {
  height: 3.8rem;
}

.container {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  padding: 2rem;
}

.hint {
  gap: 5px;
}
.content {
  padding: 0 1rem;
  justify-content: space-between;
  gap: 1rem;
}
.input-controller {
  display: flex;
  padding: 1rem 0;
  border-radius: 1.6rem;
  /* border: 1px solid #515177; */
  background-color: #1b1b29;
  gap: 1rem;
  flex-direction: column;
  margin-bottom: 1rem;
}

.rate-container .input {
  border-radius: 2rem;
  gap: 5px;
  align-items: center;
  /* border: 1px solid rgb(251, 129, 58); */
  padding: 5px 1rem;
  width: 50%;
  background-color: #1b1b2971;
}

.rate-container .input div {
  font-size: 1.6rem;
}

.rate-container input,
.input-controller input {
  font-size: 1.6rem;
  background-color: transparent;
  -webkit-box-shadow: 0 0 0 30px transparent inset;
  line-height: 2;
  width: 100%;
}

.rate-container input {
  line-height: 1;
  font-size: 1.8rem;
}

.rate {
  min-height: 3.4rem;
}

.tags {
  gap: 1rem;
}

.tag {
  background-color: #6478b8;
  color: #fff;
  padding: 5px 1rem;
  border-radius: 1rem;
}

.input-tag {
  border-radius: 1rem;
  background-color: rgb(120, 120, 146);
}

.input-tag > input {
  padding: 6px 2rem;
  background-color: transparent;
  -webkit-box-shadow: 0 0 0 30px transparent inset;
  width: 100%;
}

.action {
  gap: 1rem;
}

.action.row > *:first-child {
  background: transparent;
  border: 1px solid rgb(251, 129, 58, 0.7);
}

.header {
  margin-bottom: 5px;
}

.roi .input-controller input {
  text-align: right;
}

.amount {
  flex: auto;
  text-align: right;
}

.swap {
  width: 3rem;
}

.input-container > *:first-child {
  flex: auto;
}

.input-container > *:last-child {
  align-self: end;
}

.tooltip {
  /* padding: 5px; */
  border: 1px solid #c3c5cb;
  border-radius: 100%;
  height: 1.6rem;
  width: 1.6rem;
  text-align: center;
  color: #c3c5cb;
  line-height: 1;
}

.condition > .content,
.header-container > .content {
  padding: 0;
}

.tabs.disabled {
  opacity: 0.6;
}

.tabs {
  flex: auto;
  justify-content: space-between;
  border-radius: 1.6rem;
  background-color: #1b1b29;
}

.tab {
  padding: 0.5rem 2rem;
  cursor: pointer;
  font-weight: 600;
}

.disabled .tab {
  cursor: not-allowed;
}

.tab.active {
  background-color: #6478b8;
  border-radius: 1.6rem;
}
.detail-container,
.dialog {
  max-width: 40rem;
  max-height: 90vh;
}

.dialog > *:last-child {
  max-height: calc(90vh - 5.5rem);
}

.controller {
  display: block;
  position: relative;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  height: 2.4rem;
  width: 2.4rem;
}

.controller input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 2.4rem;
  width: 2.4rem;
  background-color: #1b1b29;
  border-radius: 5px;
}

/* On mouse-over, add a grey background color */
.controller:hover input ~ .checkmark {
  background-color: #3c3c5a;
}

/* When the checkbox is checked, add a blue background */
.controller input:checked ~ .checkmark {
  background-color: #6478b8;
}

.detail-container {
  background-color: rgba(120, 120, 146, 0.39);
  padding: 2rem;
  text-align: center;
}

.toggle {
  font-size: 1.4rem;
  transform: rotate(-90deg);
}

.option > .controller:checked + .main .toggle {
  transform: rotate(90deg);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.controller input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.controller .checkmark:after {
  left: 9px;
  top: 3px;
  width: 8px;
  height: 13px;
  border: solid #c3c5cb;
  border-width: 0 2px 2px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

.icon-container {
  text-align: center;
}

.input-pannel {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  position: relative;
  padding: 1rem;
  border-radius: 1.6rem;
  border: 10px solid transparent;
  background-clip: padding-box;
  background: rgb(40, 40, 60, 0.7);
  margin: 2px;
  /* linear-gradient(
    to left,
    rgb(251, 129, 58, 0.5),
    rgba(252, 50, 86, 0.5)
  ); */
}

.input-pannel::before {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: -1;
  border-radius: inherit;
  background: linear-gradient(to left, rgb(251, 129, 58), rgba(252, 50, 86, 1));
  margin: -12px;
}

.input-pannel .content {
  padding: 0;
}

/* .rate-container > input, */
.rate-container > div {
  font-size: 2rem;
  color: #fff;
  font-weight: 600;
}

.button-container {
  justify-content: center;
  gap: 1rem;
  font-size: 1.4rem;
  cursor: pointer;
}

.button-container > .icon {
  transform: rotate(90deg);
}

.open .button-container > .icon {
  transform: rotate(-90deg);
}

.detail-info {
  display: none;
  width: 100%;
}

.detail {
  justify-content: space-between;
}

.open .detail-info {
  display: flex;
  flex-direction: column;
}

.explain-container {
  text-align: left;
  padding: 2rem;
}
.explain {
  list-style-type: circle;
}

.dropdown > *:last-child {
  background-color: #454564;
}

.dropdown > *:nth-child(3) {
  background-color: #515177;
  border: 1px solid #515177;
  min-height: 4.2rem;
  color: #fff;
}

@media (max-width: 460px) {
  .detail-container,
  .dialog {
    /*  width: 100rem; */
    min-width: calc(100vw - 4rem);
  }

  .expand{
    flex-direction: column;
  }
}
